#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

%:
	dh $@ --with python3

override_dh_auto_clean:
	rm -rf build/ *.egg-info

override_dh_auto_build:
	# Initialize submodules
	git submodule update --init --recursive src/audio_engine/
	# Build React site
	cd screamrouter-react && \
	npm install && \
	npm run build
	# React build output is in ./site/
	# Build Python C++ extension in place
	python3 setup.py build_ext --inplace
	# The .so file is now inside the src/ directory structure

override_dh_auto_install:
	# Create directories
	mkdir -p debian/screamrouter/etc/screamrouter/cert
	mkdir -p debian/screamrouter/usr/share/screamrouter/site
	# src will be copied entirely
	# mkdir -p debian/screamrouter/usr/share/screamrouter/src
	mkdir -p debian/screamrouter/usr/share/screamrouter/images
	mkdir -p debian/screamrouter/var/log/screamrouter
	
	# Copy application files
	cp screamrouter.py debian/screamrouter/usr/share/screamrouter/
	cp requirements.txt debian/screamrouter/usr/share/screamrouter/
	cp uvicorn_log_config.yaml debian/screamrouter/usr/share/screamrouter/
	cp setup.py pyproject.toml README.md debian/screamrouter/usr/share/screamrouter/

	# Copy src directory (which now includes the compiled .so extension)
	cp -r src/ debian/screamrouter/usr/share/screamrouter/src/

	# Copy images
	cp -r images/ debian/screamrouter/usr/share/screamrouter/images/
	# Copy the built React site
	cp -r site/* debian/screamrouter/usr/share/screamrouter/site/
	
	# Certificate generation is handled in postinst

override_dh_installsystemd:
	dh_installsystemd --name=screamrouter
