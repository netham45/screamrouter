name: Build RPM Package

on:
  workflow_call:
    outputs:
      rpm_path:
        description: "Path to the built .rpm file"
        value: ${{ jobs.build-rpm-package.outputs.rpm_path }}
      version:
        description: "Version of the built package" 
        value: ${{ jobs.build-rpm-package.outputs.version }}
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-rpm-package:
    runs-on: ubuntu-latest
    container:
      image: almalinux:9
    outputs:
      rpm_path: ${{ steps.save_path.outputs.rpm_path }}
      version: ${{ env.VERSION }}
    
    steps:
      - name: Install Git and basic dependencies
        run: |
          dnf install -y epel-release && dnf install -y dnf-plugins-core && dnf config-manager --set-enabled crb && dnf install -y git gcc gcc-c++ make lame-devel rpmdevtools rpmlint openssl \
            python3-devel python3-pip python3-setuptools python3-virtualenv \
            autoconf automake libtool cmake

      - name: Install Node.js 20
        run: |
          curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -
          dnf install -y epel-release && dnf install -y dnf-plugins-core && dnf config-manager --set-enabled crb && dnf install -y nodejs
          node --version
      
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Configure Git
        run: git config --global --add safe.directory /__w/screamrouter/screamrouter

      - name: Get commit short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
      - name: Set version from tag or commit
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            VERSION="0.0.0.$(echo ${{ env.SHORT_SHA }})"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          
      - name: Update spec file version
        run: |
          sed -i "s/Version:        1.0.0/Version:        ${{ env.VERSION }}/" rpm/screamrouter.spec
      
      - name: Setup RPM build environment
        run: |
          rpmdev-setuptree
          
      - name: Create source tarball
        run: |
          # Create a clean source directory
          mkdir -p /tmp/screamrouter-${{ env.VERSION }}
          cp -r * /tmp/screamrouter-${{ env.VERSION }}/ || true
          cd /tmp
          tar -czf ~/rpmbuild/SOURCES/screamrouter-${{ env.VERSION }}.tar.gz screamrouter-${{ env.VERSION }}
      
      - name: Build RPM package
        run: |
          # The site is built as part of the RPM spec %build section
          rpmbuild -ba rpm/screamrouter.spec
          # Copy the built RPM to the repository root
          mkdir -p /github/workspace/artifacts
          cp ~/rpmbuild/RPMS/x86_64/screamrouter-*.rpm /github/workspace/artifacts/ || cp ~/rpmbuild/RPMS/noarch/screamrouter-*.rpm /github/workspace/artifacts/
      
      - name: Debug RPM build failure
        if: failure()
        run: |
          echo "RPM build failed. Checking build logs..."
          find ~/rpmbuild -name "*.log" -exec cat {} \;
      
      - name: Save artifact path
        id: save_path
        run: |
          RPM_PATH=$(ls /github/workspace/artifacts/screamrouter-*.rpm 2>/dev/null || echo "")
          if [ -n "$RPM_PATH" ]; then
            echo "rpm_path=${RPM_PATH}" >> $GITHUB_OUTPUT
          else
            echo "Failed to find RPM artifact" >&2
            exit 1
          fi
          
      - name: Upload RPM package artifact
        uses: actions/upload-artifact@v4
        with:
          name: screamrouter-rpm
          path: /github/workspace/artifacts/screamrouter-*.rpm
          retention-days: 1
