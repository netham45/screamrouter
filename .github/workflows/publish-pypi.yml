name: Publish to PyPI

on:
  # Trigger after build-wheels workflow completes
  workflow_run:
    workflows: ["Build Python Wheels"]
    types:
      - completed
    branches:
      - main
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      use_production_pypi:
        description: 'Publish to PRODUCTION PyPI (default is Test PyPI)'
        required: false
        type: boolean
        default: false
      run_id:
        description: 'Build workflow run ID (leave empty for latest)'
        required: false
        type: string

# Prevent concurrent publishing
concurrency:
  group: pypi-publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish-to-pypi:
    name: Publish Python Wheels to PyPI
    runs-on: ubuntu-latest
    # Only run if the build workflow succeeded or if manually triggered
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    
    # Required for Trusted Publishers authentication with PyPI
    # No API tokens needed when using Trusted Publishers
    permissions:
      id-token: write  # IMPORTANT: Required for PyPI Trusted Publishers
      contents: read
      actions: read  # Required to download artifacts from other workflows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Download the wheels built by the build-wheels workflow
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-wheels
          path: dist/
          run-id: ${{ github.event.inputs.run_id || github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Clean dist directory
        run: |
          # Remove any non-wheel files (like .egg files)
          find dist/ -type f ! -name "*.whl" -delete
          echo "Cleaned dist directory - keeping only .whl files"
      
      - name: List downloaded wheels
        run: |
          echo "Downloaded wheels:"
          ls -lh dist/
          echo ""
          echo "Wheel count: $(ls dist/*.whl 2>/dev/null | wc -l)"
      
      # Verify we have the expected number of wheels (20 total)
      # 4 platforms × 5 Python versions = 20 wheels
      - name: Verify wheel integrity
        run: |
          WHEEL_COUNT=$(ls dist/*.whl 2>/dev/null | wc -l)
          echo "Found $WHEEL_COUNT wheels"
          
          if [ "$WHEEL_COUNT" -ne 20 ]; then
            echo "::warning::Expected 20 wheels but found $WHEEL_COUNT"
            echo "This may indicate a build failure for some platforms"
          fi
          
          # List wheels by platform for verification
          echo ""
          echo "=== Wheel Inventory ==="
          echo "Linux x86_64: $(ls dist/*linux_x86_64.whl dist/*manylinux*x86_64.whl 2>/dev/null | wc -l)"
          echo "Linux ARM64:  $(ls dist/*linux_aarch64.whl dist/*manylinux*aarch64.whl 2>/dev/null | wc -l)"
          echo "Windows x64:  $(ls dist/*win_amd64.whl 2>/dev/null | wc -l)"
          echo "Windows x86:  $(ls dist/*win32.whl 2>/dev/null | wc -l)"
          
          # Validate wheel naming
          echo ""
          echo "=== Wheel Files ==="
          for wheel in dist/*.whl; do
            if [ -f "$wheel" ]; then
              echo "✓ $(basename $wheel)"
            fi
          done
      
      # Publish to Production PyPI
      # This uses PyPI Trusted Publishers - no API token needed
      #
      # SETUP REQUIRED: Configure PyPI project with Trusted Publisher:
      #   1. Go to: https://pypi.org/manage/project/screamrouter/settings/publishing/
      #   2. Add a new Trusted Publisher with:
      #      - PyPI Project Name: screamrouter
      #      - Owner: {your-github-username-or-org}
      #      - Repository name: screamrouter
      #      - Workflow name: publish-pypi.yml
      #      - Environment name: (leave empty, or specify if using environments)
      #
      # Package URL: https://pypi.org/project/screamrouter/
      - name: Publish to Production PyPI
        if: github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
          print-hash: true
      
      # Publish to Test PyPI (optional - for testing)
      # Uncomment if you want to also publish to Test PyPI
      #
      # - name: Publish to Test PyPI
      #   if: github.event_name == 'workflow_dispatch' && github.event.inputs.use_production_pypi != 'true'
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository-url: https://test.pypi.org/legacy/
      #     skip-existing: true
      #     verbose: true
      #     print-hash: true
      
      - name: Generate publishing summary
        if: success()
        run: |
          echo "## 📦 PyPI Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully published wheels to **Production PyPI**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Total wheels published:** $(ls dist/*.whl 2>/dev/null | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Wheels:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Python Versions |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|----------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Linux x86_64 | 3.10, 3.11, 3.12, 3.13, 3.14 |" >> $GITHUB_STEP_SUMMARY
          echo "| Linux ARM64 | 3.10, 3.11, 3.12, 3.13, 3.14 |" >> $GITHUB_STEP_SUMMARY
          echo "| Windows x64 | 3.10, 3.11, 3.12, 3.13, 3.14 |" >> $GITHUB_STEP_SUMMARY
          echo "| Windows x86 | 3.10, 3.11, 3.12, 3.13, 3.14 |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 View on PyPI:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "https://pypi.org/project/screamrouter/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Installation Instructions:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'pip install screamrouter' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ℹ️ Important Notes:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🔐 Trusted Publisher authentication is configured for this repository" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Package supports Python 3.10, 3.11, 3.12, 3.13, and 3.14" >> $GITHUB_STEP_SUMMARY
          echo "- 💻 Available for Linux x86_64, Linux ARM64, Windows x64, and Windows x86 platforms" >> $GITHUB_STEP_SUMMARY