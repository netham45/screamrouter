name: Build and Release Packages

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-deb:
    uses: ./.github/workflows/build-debian-package.yml
    
  build-rpm:
    uses: ./.github/workflows/build-rpm-package.yml
  
  create-release:
    needs: [build-deb, build-rpm]
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get commit short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
      - name: Download DEB artifact
        uses: actions/download-artifact@v4
        with:
          name: screamrouter-deb
          path: ./artifacts
          
      - name: Download RPM artifact
        uses: actions/download-artifact@v4
        with:
          name: screamrouter-rpm
          path: ./artifacts
      
      - name: Set release details
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            RELEASE_NAME="ScreamRouter ${VERSION}"
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            IS_PRERELEASE="false"
          else
            VERSION="development-${{ env.SHORT_SHA }}"
            RELEASE_NAME="ScreamRouter Development Build (${{ env.SHORT_SHA }})"
            TAG_NAME="build-${{ env.SHORT_SHA }}"
            IS_PRERELEASE="true"
          fi
          
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IS_PRERELEASE=${IS_PRERELEASE}" >> $GITHUB_ENV
      
      - name: Display package files
        run: |
          ls -la ./artifacts/
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/screamrouter_*.deb
            ./artifacts/screamrouter-*.rpm
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: ${{ env.IS_PRERELEASE == 'true' }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}