{%- import "imports/selects.html.jinja" as selects %}
{%- import "imports/buttons.html.jinja" as buttons -%}
{% macro main_body(sources, sinks, routes)%}
        <DIV ID="randomcontainer1" CLASS="section">
            <DIV CLASS="blur">
                <DIV CLASS="section-name">
                    Sources
                </DIV>
                <DIV CLASS="section-buttons select-container">
                    {{- buttons.button("add_source_button", "Add Source", "section-button", {}, "Add Source")}}
                    {{- buttons.button("add_source_group_button", "Add Group", "section-button", {}, "Add Source Group")}}
                    {{- buttons.button("sort_sources_by_name", "Sort By Name", "section-button", {}, "Sort Sources by Name")}}
                    {{- buttons.button("reverse_sources", "Reverse Order", "section-button", {}, "Reverse Source Order")}}
                    <DIV ID="select-sources" CLASS="main-select" SIZE="{{sources | length}}">
                        {%- set options = namespace(options=[]) %}
                        {%- for source in sources %}
                        {{- source.type }}
                        {%- set enabled_class_str = "enabled" if source.enabled else "disabled" %}
                        {%- set _option = {"value": source.name,
                        "label": source.name,
                        "sublabel": ("Source Group: " ~ source.group_members | join(", ")) if source.group_members else "Source: " ~ source.ip,
                        "class": "option option-%s" % enabled_class_str,
                        "alt": ("Source Group " if source.is_group else "Source ") + source.name + ((" Group Members: " + source.group_members | join(", ")) if (source.is_group) else ""),
                        "shortalt": ("Source Group " if source.is_group else "Source ") + source.name,
                        "data": source} %}
                        {%- set options.options = options.options + [_option] %}
                        {%- endfor %}
                        {{- selects.make_multiple_options(options.options, sources) }}
                    </DIV>
                </DIV>
            </DIV>
        </DIV>
        <DIV ID="randomcontainer2" CLASS="section">
            <DIV CLASS="blur">
                <DIV CLASS="section-name">
                    Routes
                </DIV>
                <DIV CLASS="section-buttons select-container">
                    {{- buttons.button("add_route_button", "Add Route", "section-button", {}, "Add Route")}}
                    <SPAN CLASS="mobile-route-buttons">
                        {{- buttons.button("sort_routes_by_source", "Sort By Source", "section-button", {}, "Sort Routes by Source")}}
                        {{- buttons.button("sort_routes_by_sink", "Sort By Sink", "section-button", {}, "Sort Routes by Sink")}}
                        {{- buttons.button("sort_routes_by_name", "Sort By Name", "section-button", {}, "Sort Routes by Name")}}
                        {{- buttons.button("reverse_routes", "Reverse Order", "section-button", {}, "Reverse Route Order")}}
                    </SPAN>
                    <SPAN CLASS="desktop-route-buttons">
                        {{- buttons.disabled_button("enable_route", "Enable Route", "section-button", {}, "Enable Route")}}
                        {{- buttons.disabled_button("disable_route", "Disable Route", "section-button", {}, "Disable Route")}}
                        {{- buttons.disabled_button("edit_route", "Configure", "section-button", {}, "Configure")}}
                        {{- buttons.disabled_button("route_equalizer", "Equalizer", "section-button", {}, "Equalizer")}} <br/>
                        <INPUT TABINDEX="0" TYPE="range" ID="route_volume" ONCHANGE="route_volume_change()" ALT="Route Volume" TITLE="Route Volume" VALUE="50" DISABLED>
                    </SPAN>

                    <span><!-- Empty span so there's an even number of elements before start --></span>
                    <BR />
                    <DIV ID="select-routes" CLASS="main-select" SIZE="{{routes | length}}" STYLE="display:none">
                        {%- set options = namespace(options=[]) %}
                        {%- for route in routes %}
                        {{- route.type }}
                        {%- set enabled_class_str = "enabled" if route.enabled else "disabled" %}
                        {%- set _option = {"value": route.name,
                        "label": route.name,
                        "sublabel": ("Source %s to Sink %s" % (route.source, route.sink)) | safe,
                        "class": "option option-%s" % enabled_class_str,
                        "alt": "Route " + route.name + ", Source Name: %s, Sink Name: %s" % (route.source, route.sink),
                        "shortalt": "Route " + route.name,
                        "data": route} %}
                        {%- set options.options = options.options + [_option] %}
                        {%- endfor %}
                        {{- selects.make_multiple_options(options.options, routes) }}
                        
                    </DIV>
                </DIV>
            </DIV>
        </DIV>
        <DIV ID="randomcontainer3" CLASS="section">
            <DIV CLASS="blur">
                <DIV CLASS="section-name">
                    Sinks
                </DIV>
                <DIV CLASS="section-buttons select-container">
                    {{- buttons.button("add_sink_button", "Add Sink", "section-button", {}, "Add Sink")}}
                    {{- buttons.button("add_sink_group_button", "Add Group", "section-button", {}, "Add Sink Group")}}
                    {{- buttons.button("sort_sinks_by_name", "Sort By Name", "section-button", {}, "Sort Sinks by Name")}}
                    {{- buttons.button("reverse_sinks", "Reverse Order", "section-button", {}, "Reverse Sink Order")}}<BR />
                    <DIV ID="select-sinks" CLASS="main-select" SIZE="{{sinks | length}}">
                        {%- set options = namespace(options=[]) %}
                        {%- for sink in sinks %}
                        {%- set enabled_class_str = "enabled" if sink.enabled else "disabled" %}
                        {%- set _option = {"value": sink.name,
                        "label": sink.name,
                        "sublabel": ("Sink Group: " ~ sink.group_members | join(", ")) if sink.group_members else "Sink: %s:%s" % (sink.ip, sink.port),
                        "class": "option option-%s" % enabled_class_str,
                        "alt": ("Sink Group " if sink.is_group else "Sink ") + sink.name + ((" Group Members: " + sink.group_members | join(", ")) if (sink.is_group) else ""),
                        "shortalt": ("Sink Group " if sink.is_group else "Sink ") + sink.name,
                        "data": sink} %}
                        {%- set options.options = options.options + [_option] %}
                        {%- endfor %}
                        {{- selects.make_multiple_options(options.options, sinks) }}
                    </DIV>
                </DIV>
            </DIV>
        </DIV>
{%- endmacro %}

{{ main_body(sources, sinks, routes) }}